'\" t
.\"     Title: gfperf.rb
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 19 May 2012
.\"    Manual: Gfarm
.\"    Source: Gfarm
.\"  Language: English
.\"
.TH "GFPERF\&.RB" "1" "19 May 2012" "Gfarm" "Gfarm"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
gfperf.rb \- Gfarm measure performance
.SH "SYNOPSIS"
.HP \w'\fBgfperf\&.rb\fR\ 'u
\fBgfperf\&.rb\fR [\-c,\ \-\-check] \fIconfig\ file\fR
.SH "DESCRIPTION"
.PP
This command measure peformance of gfarm file system according to
\fIconfig file\fR\&.
\fIconfig file\fR
is written in YAML\&.
.PP
Example config files are (gfarm install directory)/share/gfarm/config/gfperf\-[config|simple]\&.yml \&.
.SH "OPTIONS"
.PP
\fB\-c, \-\-check\fR
.RS 4
Check
\fIconfig file\fR
syntax\&.
.RE
.SH "EXAMPLES"
.PP
Config file example is following\&.
.sp
.if n \{\
.RS 4
.\}
.nf
database: {filename: "/var/www/database\&.db", check span: "10days",
	   backup: "/var/www/databse\&.db\&.bak" }
errlog: "/tmp/gfperf\&.err\&.log"
authentication: ["sharedsecret", "gsi_auth", "gsi"]
gfarm2fs_mountpoint: ["/mnt/gfarm2fs"]
metadata: [ {testdir: "gfarm:///tmp", number: "250"},
            {testdir: "file:///mnt/gfarm2fs/tmp", number: "250"} ]
tree: [ {testdir: "gfarm:///tmp", width: "5", depth: "3"},
        {testdir: "file:///mnt/gfarm2fs/tmp", width: "5", depth: "3"} ]
copy: [
   {src: "file:///tmp", dst: "gfarm:///tmp", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd0\&.local"},
   {src: "gfarm:///tmp", dst: "file:///tmp", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd0\&.local"},
   {src: "file:///tmp", dst: "gfarm:///tmp", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd1\&.local"},
   {src: "gfarm:///tmp", dst: "file:///tmp", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd1\&.local"},
   {src: "file:///tmp", dst: "gfarm:///tmp", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd0\&.local", gfarm2fs: "/mnt/gfarm2fs"},
   {src: "gfarm:///tmp", dst: "file:///tmp", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd0\&.local", gfarm2fs: "/mnt/gfarm2fs"},
   {src: "file:///tmp", dst: "gfarm:///tmp", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd1\&.local", gfarm2fs: "/mnt/gfarm2fs"},
   {src: "gfarm:///tmp", dst: "file:///tmp", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd1\&.local", gfarm2fs: "/mnt/gfarm2fs"}
      ]
read: [
   {testdir: "gfarm:///tmp", filesize: "1M", bufsize: "4K",
    gfsd: "gfsd0\&.local"},
   {testdir: "gfarm:///tmp", filesize: "1M", bufsize: "4K",
     gfsd: "gfsd1\&.local"},
   {testdir: "gfarm:///tmp", random: "true", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd0\&.local"},
   {testdir: "gfarm:///tmp", random: "true", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd1\&.local"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd0\&.local"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd1\&.local"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs", random: "true",
    filesize: "1M", bufsize: "4K", gfsd: "gfsd0\&.local"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs", random: "true",
    filesize: "1M", bufsize: "4K", gfsd: "gfsd1\&.local"}
      ]
write: [
   {testdir: "gfarm:///tmp", filesize: "1M", bufsize: "4K",
    gfsd: "gfsd0\&.local"},
   {testdir: "gfarm:///tmp", filesize: "1M", bufsize: "4K",
    gfsd: "gfsd1\&.local"},
   {testdir: "gfarm:///tmp", random: "true", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd0\&.local"},
   {testdir: "gfarm:///tmp", random: "true", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd1\&.local"},
   {testdir: "gfarm:///tmp", overwrite: "true", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd0\&.local"},
   {testdir: "gfarm:///tmp", overwrite: "true", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd1\&.local"},
   {testdir: "gfarm:///tmp", overwrite: "true", random: "true",
    filesize: "1M", bufsize: "4K", gfsd: "gfsd0\&.local"},
   {testdir: "gfarm:///tmp", overwrite: "true", random: "true",
    filesize: "1M", bufsize: "4K", gfsd: "gfsd1\&.local"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd0\&.local"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs", filesize: "1M",
    bufsize: "4K", gfsd: "gfsd1\&.local"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs", random: "true",
    filesize: "1M", bufsize: "4K", gfsd: "gfsd0\&.local"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs", random: "true",
    filesize: "1M", bufsize: "4K", gfsd: "gfsd1\&.local"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs",
    overwrite: "true", filesize: "1M", bufsize: "4K",
    gfsd: "gfsd0\&.local"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs",
    overwrite: "true", filesize: "1M", bufsize: "4K",
    gfsd: "gfsd1\&.local"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs",
    overwrite: "true", random: "true", filesize: "1M", bufsize: "4K",
    gfsd: "gfsd0\&.local"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs",
    overwrite: "true", random: "true", filesize: "1M", bufsize: "4K",
    gfsd: "gfsd1\&.local"}
      ]
replica: [
   {testdir: "gfarm:///tmp", src: "gfsd0\&.local", dst: "gfsd1\&.local",
    filesize: "1M"},
   {testdir: "gfarm:///tmp", src: "gfsd1\&.local", dst: "gfsd0\&.local",
    filesize: "1M"}
	 ]
autoreplica: [
   {testdir: "gfarm:///tmp", filesize: "1M", number: "3", replica: "1"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs", filesize: "1M",
    number: "3", replica: "1"},
   {testdir: "gfarm:///tmp", filesize: "1M", number: "3", replica: "2"},
   {testdir: "gfarm:///tmp", gfarm2fs: "/mnt/gfarm2fs", filesize: "1M",
    number: "3", replica: "2"}
	 ]
parallel: {
  group1: [
   {rhost: "gfsd0\&.local", type: "read", testdir: "gfarm:///tmp",
    filesize: "1M", bufsize: "4K", gfsd: "gfsd0\&.local"},
   {rhost: "gfsd0\&.local", type: "read", testdir: "gfarm:///tmp",
    filesize: "1M", bufsize: "4K", gfsd: "gfsd1\&.local"}
        ],
  group2: [
   {rhost: "gfsd0\&.local", type: "write", testdir: "gfarm:///tmp",
    filesize: "1M", bufsize: "4K", gfsd: "gfsd0\&.local"},
   {rhost: "gfsd0\&.local", type: "write", testdir: "gfarm:///tmp",
    filesize: "1M", bufsize: "4K", gfsd: "gfsd1\&.local"}
       ],
  group3: [
   {type: "replica", testdir: "gfarm:///tmp", src: "gfsd0\&.local",
    dst: "gfsd1\&.local", filesize: "1M"},
   {type: "replica", testdir: "gfarm:///tmp", src: "gfsd1\&.local",
    dst: "gfsd0\&.local", filesize: "1M"}
       ]
}
parallel\-autoreplica: {
  group4: [
     {testdir: "gfarm:///tmp1", filesize: "1M", number: "3",
      replica: "2"},
     {testdir: "gfarm:///tmp2", filesize: "1M", number: "3",
      replica: "2"},
     {testdir: "gfarm:///tmp3", filesize: "1M", number: "3",
      replica: "2"},
     {testdir: "gfarm:///tmp4", filesize: "1M", number: "3",
      replica: "2"}
       ],
  group5: [
     {testdir: "gfarm:///tmp1", gfarm2fs: "/mnt/gfarm2fs",
      filesize: "1M", number: "3", replica: "2"},
     {testdir: "gfarm:///tmp2", gfarm2fs: "/mnt/gfarm2fs",
      filesize: "1M", number: "3", replica: "2"}
       ]    
}
.fi
.if n \{\
.RE
.\}
.PP
Following sentences explain keywords of the YAML\&.
.PP
database
.RS 4
Specify databse filename in filename: \&. Specify backup of database file in backup: \&. check span: specifies time span of calculating average and standard deviation\&.
.RE
.PP
errlog
.RS 4
This commands prints error messsages in the file specified by errlog: \&. All error messages are also written in the database\&. If you don\*(Aqt need to error log file, this parameter can be omitted\&.
.RE
.PP
authentication
.RS 4
Specify authentication types of performance measuring\&. Authentication types are sharedsecret, gsi_auth and gsi\&. Performance test is executed on all specified types\&.
.RE
.PP
gfarm2fs_mountpoint
.RS 4
Specify gfarm2fs mount point\&. When start testing, this command mounts all gfarm2fs mount point automatically\&. At the end of testing, unmounted automatically\&. When changing authenticaion type, remounted automatically\&.
.RE
.PP
metadata
.RS 4
Perfomance measuring using gfperf\-metadata\&. Parameters are gfperf\-metadata long options\&.
.RE
.PP
tree
.RS 4
Perfomance measuring using gfperf\-tree\&. Parameters are gfperf\-tree long options\&.
.RE
.PP
copy
.RS 4
Perfomance measuring using gfperf\-copy\&. Parameters are gfperf\-copy long options\&.
.RE
.PP
read
.RS 4
Perfomance measuring using gfperf\-read\&. Parameters are gfperf\-read long options\&. If you need to test sequentially read, remove random option\&.
.RE
.PP
write
.RS 4
Perfomance measuring using gfperf\-write\&. Parameters are gfperf\-write long options\&. If you need to test sequentially write, remove random option\&. If you need to test append write, remove overwrite option\&.
.RE
.PP
replica
.RS 4
Perfomance measuring using gfperf\-replica\&. Parameters are gfperf\-replica long options\&.
.RE
.PP
autoreplica
.RS 4
Perfomance measuring using gfperf\-autoreplica\&. Parameters are gfperf\-autoreplica long options\&.
.RE
.PP
parallel
.RS 4
Specify parallel test patterns\&. At first, specify group name that is a sinbol of parallel testing\&. Group name must be uniq in all parallel testing (includes parallel\-autoreplica)\&. Specify remote host in rhost: \&. This command uses ssh for executing command\&. type: specifies one of read, write, replica\&. These types corresponds to gfperf\-parallel\-read, gfperf\-parallel\-write, gfperf\-parallel\-replica\&.
.RE
.PP
parallel\-autoreplica
.RS 4
Specify auto replication test in parallel\&. At first, specify group name that is a sinbol of parallel testing\&. Group name must be uniq in all parallel testing (includes parallel)\&. Test parameters are gfperf\-parallel\-autoreplica long options\&. The result is average of gfperf\-parallel\-autoreplica outputs\&.
.RE
.SH "SEE ALSO"
.PP

\fBgfperf-metadata\fR(1),
\fBgfperf-tree\fR(1),
\fBgfperf-copy\fR(1),
\fBgfperf-read\fR(1),
\fBgfperf-write\fR(1),
\fBgfperf-replica\fR(1),
\fBgfperf-autoreplica\fR(1),
\fBgfperf-parallel-read\fR(1),
\fBgfperf-parallel-write\fR(1),
\fBgfperf-parallel-replica\fR(1),
\fBgfperf-parallel-autoreplica\fR(1),
.SH "NOTES"
.PP
Using ssh command execution, no password is recommended\&.
.PP
Bash doesn\*(Aqt read ~/\&.bashrc in some envronment\&. Please check before running gfperf\&.rb\&.
