'\" t
.\"     Title: gfarm2.conf
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 12 Nov 2013
.\"    Manual: Gfarm
.\"    Source: Gfarm
.\"  Language: English
.\"
.TH "GFARM2\&.CONF" "5" "12 Nov 2013" "Gfarm" "Gfarm"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
gfarm2.conf \- Gfarm設定ファイル
.SH "DESCRIPTION"
.PP
gfarm2\&.confファイルは、gfarmプログラムの設定ファイルです。 サーバー・プロセスであるgfsdは、デフォルトでは、 この%%SYSCONFDIR%%/gfarm2\&.confを設定ファイルとして参照します。 メタデータサーバー・プロセスであるgfmdは、%%SYSCONFDIR%%/gfmd\&.confを 読み込みます。gfmd\&.confの形式は、gfarm2\&.confと同一です。 なお、設定内容が読み込まれるのは起動時だけなので、 設定内容を変更した場合、サーバーを再起動する必要があります。
.PP
アプリケーションプログラムは、環境変数GFARM_CONFIG_FILEで 指定したファイルと、%%SYSCONFDIR%%/gfarm2\&.confを、設定ファイル として参照します。この二つのファイルでは、環境変数GFARM_CONFIG_FILEで 指定したファイルの設定の方が先に読み込まれます。 どちらの設定ファイルも、同一の文法で記述します。 同一の指定文が複数あった場合には、先に指定されていた方が優先されます。 環境変数GFARM_CONFIG_FILEが設定されてない場合、代わりに ユーザのホームディレクトリにある\&.gfarm2rcファイルを使用します。
.PP
gfarm2\&.confは、一行に一文の形式で設定します。 ただし、行末に文字``\e\*(Aq\*(Aqを記述することによって、行を継続させることが できます。また、文字``#\*(Aq\*(Aqから行末までは、コメントとして扱われ、無視 されます。
.SH "ホスト指定"
.PP
引数として、\fIホスト指定\fRを記述できる文がいくつかありますが、 この場合、ホスト指定には、下記のいずれかを記述できます。
.PP
\fIIII\&.JJJ\&.KKK\&.LLL\fR
.RS 4
"\&."で区切られた0〜255までの数字4つで、IPアドレスを指定します。
.RE
.PP
\fIIII\&.JJJ\&.KKK\&.LLL\fR/\fIMM\fR
.RS 4
IPアドレスと、"/"で区切られた0〜31までの数字で、ネットワークを 指定します。"/"以降の数字はnetmaskのビット長です。
.RE
.PP
\fIdomain\&.name\fR
.RS 4
ホスト名をドメイン名で指定します。
.RE
.PP
\fI\&.\fR\fIdomain\&.name\fR
.RS 4
ドメイン名の先頭が"\&."ではじまる場合、このドメイン名に所属する全ての ホストを意味します。
.RE
.PP
\fI*\fR
.RS 4
"*"と記述されている場合、全てのホストを意味します。
.RE
.PP
\fILISTENER\fR
.RS 4
全て大文字で"LISTENER"と記述すると、通信する相手に関係なく、 サーバー側(着呼側)のソケットを意味します。
.RE
.SH "文"
.PP
文には、下記の種類があります。
.PP
spool \fIgfsdスプール・ディレクトリ\fR
.RS 4
gfsdが、gfarmファイルの実体を保持するディレクトリ名を 指定します。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	spool /var/spool/gfarm
.fi
.if n \{\
.RE
.\}
.RE
.PP
spool_server_listen_address \fIIPアドレス\fR
.RS 4
gfsdがTCPおよびUDPの要求を受け付けるIPアドレスを指定します。 省略時は、そのホストの全てのIPアドレスで受け付けます。 このオプションは、一つのノードで複数のスプールを提供する場合に、 それぞれのスプールごとに、別々のIPアドレスを使ってgfsdを起動する ために用います。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	spool_server_listen_address 192\&.168\&.121\&.1
.fi
.if n \{\
.RE
.\}
.RE
.PP
spool_server_listen_backlog \fI数\fR
.RS 4
gfsd が
\fBlisten\fR(2)
システムコールの第二引数に渡すバックログ・パラメータの数を指定します。 デフォルト値は、<sys/socket\&.h> に SOMAXCONN 定数が定義されているOSではその値 (OSに依存しますが、典型的な値は 128)、定義されてないOSでは 5 となります。
.sp
クライアント数の多い環境では、システム制限値を上げた上で、この値を増やしておくことを推奨します。
.sp
この文はgfarm2\&.confのみで有効であり、gfmd\&.confでは無視されます。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	spool_server_listen_backlog 128
.fi
.if n \{\
.RE
.\}
.RE
.PP
spool_server_cred_type \fIcred_type\fR
.RS 4
GSI認証において、gfsdが用いる証明書の種類を指定します。
sharedsecret利用時には、この指定は単に無視されます。
.sp
サーバ側でこの指定を省略した場合、サーバをroot権限で起動した場合は ホスト証明書を用います。またサーバを一般ユーザ権限で起動した場合は ユーザ証明書を用います。
.sp
クライアント側でこの指定を省略した場合、サーバがホスト証明書を利用している と仮定してサーバ認証を行います。このためサーバをクライアントと同じユーザ 権限で起動している場合、クライアント側では、下記の一行を設定して おく必要があります。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	spool_server_cred_type self
.fi
.if n \{\
.RE
.\}
.sp
指定可能な\fIcred_type\fRとしては、 「self」、 「host」、「user」、 「mechanism\-specific」があり、
spool_server_cred_serviceおよび
spool_server_cred_nameと組み合わせて 下記のように用います。
.PP
self
.RS 4
そのユーザが現在所持しているユーザ証明書を用いることを示します。 この指定を利用する際には、
spool_server_cred_serviceおよび
spool_server_cred_nameの 指定を行ってはいけません。
.RE
.PP
host
.RS 4
ホスト証明書あるいはサービス証明書を用いることを示します。 サービス証明書を用いる場合、そのサービスの名前を
spool_server_cred_serviceで指定します。 サービス名に「host」を指定した場合、 ファイル``/etc/grid\-security/hostcert\&.pem\*(Aq\*(Aqに あるホスト証明書を用います。 それ以外のサービス名を指定した場合、 ファイル``/etc/grid\-security/サービス/サービスcert\&.pem\*(Aq\*(Aq にあるサービス証明書を用います。 サービス名を省略した場合、「host」が指定されたとみなします。 ホスト証明書およびサービス証明書の場合、証明書のCommon Name欄のみを 比較します。Common Nameは、「CN=サービス名/ホスト名」の形式である必要が あります。また、ホスト名は、\fBgfhost\fRコマンドで指定した 正式名と正確に一致している必要があります。ホスト別名は許されません。
.sp
これは、GSSAPI (RFC2743/RFC2744)のGSS_C_NT_HOSTBASED_SERVICEに 対応する機能です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	spool_server_cred_type host
	spool_server_cred_service host
.fi
.if n \{\
.RE
.\}
.RE
.PP
user
.RS 4
ユーザ証明書を用いることを示します。 ユーザのアカウント名をspool_server_cred_nameで指定します。 アカウント名を省略した場合には、そのコマンドを起動したユーザ名が使われます。 この指定を利用する際には、spool_server_cred_serviceの 指定を行ってはいけません。
.sp
ユーザ名と証明書のDistinguished Nameの対応をとるため、 ``/etc/grid\-security/grid\-mapfile\*(Aq\*(Aqを用います。 このため、このファイルが存在しなかったり、あるいはこのファイルに登録 されてないユーザは、この機能を用いることができません。
.sp
これは、GSSAPI (RFC2743/RFC2744)のGSS_C_NT_USER_NAMEに対応する機能です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	spool_server_cred_type user
	spool_server_cred_name guest
.fi
.if n \{\
.RE
.\}
.RE
.PP
mechanism\-specific
.RS 4
サーバのX\&.509 Distinguished Nameをspool_server_cred_nameで 直接指定します。 この指定を利用する際には、spool_server_cred_serviceの 指定を行ってはいけません。
.sp
これは、GSSAPI (RFC2743/RFC2744)でName TypeとしてGSS_C_NO_OIDを 指定した場合に対応する機能です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	spool_server_cred_type mechanism\-specific
	spool_server_cred_name "/O=Grid/O=Globus/OU=example\&.com/CN=John Smith"
.fi
.if n \{\
.RE
.\}
.RE
.RE
.PP
spool_server_cred_service \fIcred_service\fR
.RS 4
GSI認証において、spool_server_cred_typeとして 「host」を指定している場合に、gfsdが用いるサービス証明書の 種類を指定します。
sharedsecret利用時には、この指定は単に無視されます。 詳しくはspool_server_cred_typeの項を参照してください。
.RE
.PP
spool_server_cred_name \fIcred_name\fR
.RS 4
GSI認証において、spool_server_cred_typeで指定した値に 応じて、gfsdが用いる証明書の設定を行います。
sharedsecret利用時には、この指定は単に無視されます。 詳しくはspool_server_cred_typeの項を参照してください。
.RE
.PP
spool_check_level \fIレベル\fR
.RS 4
gfsd起動時のスプールチェックを有効にします。スプールチェックでは、 メタデータに登録されている情報との一貫性を検査します。レベルはgfsdの\-c オプションを指定する数に相当し、"display"は\-cオプション、"delete"は\-cc オプション、"lost_found"は\-cccオプションと同等です。詳細はgfsdの マニュアルページを参照ください。レベル"disable"にすると、スプールチェックを 行いません。デフォルト値は"lost_found"です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	spool_check_level disable
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_server_host \fIgfmdホスト名\fR
.RS 4
gfmdが動作しているホスト名を指定します。
.sp
この設定は必須です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_server_host ldap\&.example\&.com
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_server_port \fIgfmdポート番号\fR
.RS 4
gfmdが利用するTCPポートの番号を指定します。 省略時のデフォルト・ポート番号は601番です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_server_port 601
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_server_cred_type \fIcred_type\fR
.RS 4
GSI認証において、gfmdが用いる証明書の種類を指定します。
sharedsecret利用時には、この指定は単に無視されます。 設定の意味についてはspool_server_cred_typeの項を 参照してください。
.RE
.PP
metadb_server_cred_service \fIcred_service\fR
.RS 4
GSI認証において、metadb_server_cred_typeとして 「host」を指定している場合に、gfmdが用いるサービス証明書の 種類を指定します。
sharedsecret利用時には、この指定は単に無視されます。 設定の意味についてはspool_server_cred_typeの項を 参照してください。
.RE
.PP
metadb_server_cred_name \fIcred_name\fR
.RS 4
GSI認証において、metadb_server_cred_typeで指定した値に 応じて、gfmdが用いる証明書の設定を行います。
sharedsecret利用時には、この指定は単に無視されます。 設定の意味についてはspool_server_cred_typeの項を 参照してください。
.RE
.PP
metadb_server_listen_backlog \fI数\fR
.RS 4
gfmd が
\fBlisten\fR(2)
システムコールの第二引数に渡すバックログ・パラメータの数を指定します。 デフォルト値は、<sys/socket\&.h> に SOMAXCONN 定数が定義されているOSではその値 (OSに依存しますが、典型的な値は 128)、定義されてないOSでは 5 となります。
.sp
この文はgfmd\&.confのみで有効であり、gfarm2\&.confでは無視されます。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_server_listen_backlog 128
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_server_max_descriptors \fI数\fR
.RS 4
メタデータサーバgfmd用のディスクリプタ・リミット値を指定します。 省略された場合、OSのハード・リミット値と、131072 の、小さい方の値が 使われます。 大規模な構成では、この値を増やす必要がありますし、 小規模な構成では減らした方が良いでしょう。 この値の計算方法については、Gfarm FAQ を御覧ください。
.sp
この文はgfmd\&.confのみで有効であり、gfarm2\&.confでは無視されます。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_server_max_descriptors 262144
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_server_stack_size \fIバイト数\fR
.RS 4
メタデータサーバgfmd内の各スレッドが利用するスタックのサイズを 指定します。省略された場合OSのデフォルト値が使われます。 このパラメータは、gfmdの消費する仮想メモリ空間のサイズを節約するために 用います。
.sp
たとえば、CentOS 5/i386の場合、デフォルトのスタックサイズは10MBです ので、このパラメータでスタックサイズを256KBに抑えると、gfmdのスタック が消費する仮想メモリ空間のサイズを、1/40に減らすことができます。
.sp
この文はgfmd\&.confのみで有効であり、gfarm2\&.confでは無視されます。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_server_stack_size 262144
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_server_thread_pool_size \fIスレッド数\fR
.RS 4
メタデータサーバgfmdのスレッドプールのスレッド数を指定します。 メタデータサーバノードのコア数くらいに設定すると効果的です。 デフォルト値は16です。
.sp
この文はgfmd\&.confのみで有効であり、gfarm2\&.confでは無視されます。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_server_thread_pool_size 16
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_server_job_queue_length \fIキュー長\fR
.RS 4
メタデータサーバgfmdのジョブキューのキュー長を指定します。 一度に接続する最大クライアントの数くらいに設定すると効果的です。 デフォルト値は16000です。
.sp
この文はgfmd\&.confのみで有効であり、gfarm2\&.confでは無視されます。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_server_job_queue_length 160
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_server_heartbeat_interval \fI秒数\fR
.RS 4
メタデータサーバgfmdが各ファイルシステムサーバgfsd に対し動作確認を行うハートビートの間隔を秒数で指定します。 デフォルト値は180秒です。
.sp
Gfarm\-2\&.3\&.0まではこの文はgfmd\&.confのみで有効であり、gfarm2\&.confでは 無視されていましたが、Gfarm\-2\&.4\&.0以降はgfsdもこのパラメータを利用し gfmd停止を検知するため、 gfarm2\&.confとgfmd\&.confの両方で指定する必要があります。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_server_heartbeat_interval 180
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_server_dbq_size \fIキュー長\fR
.RS 4
メタデータサーバgfmdではメタデータの変更をバックエンドDBに 非同期的に反映しますが，そのキューの長さを指定します。 キュー長を長くすると，バックエンドDBの更新速度に律速されにくくなります。 デフォルト値は65536です。
.sp
この文はgfmd\&.confのみで有効であり、gfarm2\&.confでは無視されます。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_server_dbq_size 65536
.fi
.if n \{\
.RE
.\}
.RE
.PP
ldap_server_host \fILDAPサーバー・ホスト名\fR
.RS 4
gfmdのバックエンド・データベースとして LDAPサーバを選択する場合、 LDAPサーバーが動作しているホスト名を指定します。 この文はgfmd\&.confで用いられ、gfarm2\&.confでは用いられません。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	ldap_server_host ldap\&.example\&.com
.fi
.if n \{\
.RE
.\}
.RE
.PP
ldap_server_port \fILDAPサーバー・ポート番号\fR
.RS 4
LDAPサーバーが利用するTCPポートの番号を指定します。
.sp
ldap_server_hostを指定する場合には、 この設定は必須です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	ldap_server_port 602
.fi
.if n \{\
.RE
.\}
.RE
.PP
ldap_base_dn \fILDAP_base_distinguished_name\fR
.RS 4
LDAPデータベースで保持するデータのキーの根となるノードの 名称、base distinguished nameを指定します。
.sp
ldap_server_hostを指定する場合には、 この設定は必須です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	ldap_base_dn "dc=example, dc=com"
.fi
.if n \{\
.RE
.\}
.RE
.PP
ldap_bind_dn \fILDAP_bind_distinguished_name\fR
.RS 4
LDAPデータベースに接続する際の認証に用いる名称を、distinguished nameで指定します。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	ldap_bind_dn "cn=gfarmuser, dc=example, dc=com"
.fi
.if n \{\
.RE
.\}
.RE
.PP
ldap_bind_password \fIpassword\fR
.RS 4
LDAPデータベースに接続する際の認証パスワードを指定します。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	ldap_bind_password "secret\-ldap\-password"
.fi
.if n \{\
.RE
.\}
.RE
.PP
postgresql_server_host \fIPostgreSQLサーバー・ホスト名\fR
.RS 4
gfmdのバックエンド・データベースとして PostgreSQLサーバを選択する場合、 PostgreSQLサーバーが動作しているホスト名を指定します。 この文はgfmd\&.confで用いられ、gfarm2\&.confでは用いられません。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	postgresql_server_host postgresql\&.example\&.com
.fi
.if n \{\
.RE
.\}
.RE
.PP
postgresql_server_port \fIPostgreSQLサーバー・ポート番号\fR
.RS 4
PostgreSQLサーバーが利用するTCPポートの番号を指定します。
.sp
postgresql_server_hostを指定する場合には、 この設定は必須です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	postgresql_server_port 602
.fi
.if n \{\
.RE
.\}
.RE
.PP
postgresql_dbname \fIdbname\fR
.RS 4
PostgreSQLデータベース名を指定します。
.sp
postgresql_server_hostを指定する場合には、 この設定は必須です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	postgresql_dbname gfarm
.fi
.if n \{\
.RE
.\}
.RE
.PP
postgresql_user \fIuser\fR
.RS 4
PostgreSQLデータベースに接続するデータベース管理下のユーザ名を指定します。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	postgresql_user gfarm
.fi
.if n \{\
.RE
.\}
.RE
.PP
postgresql_password \fIpassword\fR
.RS 4
PostgreSQLデータベースに接続するデータベース管理下のユーザのパスワードを指定します。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	postgresql_password "secret\-postgresql\-password"
.fi
.if n \{\
.RE
.\}
.RE
.PP
postgresql_conninfo \fIconnection_info\fR
.RS 4
PostgreSQLデータベースに接続するときの接続オプションを指定します。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	postgresql_conninfo "sslmode=require connect_timeout=30"
.fi
.if n \{\
.RE
.\}
.RE
.PP
auth \fI有効性\fR\ \& \fI認証方法\fR\ \& \fIホスト指定\fR
.RS 4
この文は、第3引数で指定したホストとの通信に用いる認証方法を設定します。
.sp
第1引数の\fI有効性\fR部には、enableないしdisable
キーワードを指定します。 第2引数の\fI認証方法\fR部には、gsi、
gsi_authないしsharedsecret
キーワードを指定します。 第3引数には、\fIホスト指定\fRを記述します。
.sp
この文は複数指定可能です。各認証方法ごとに、先頭から順にホスト指定に 適合するかどうか調べ、有効であるとの指定に適合した場合、その認証方法が 利用候補になります。有効であるとの指定に適合しない場合や、あるいは 有効であるとの指定に適合するよりも前に無効であるとの指定に適合した 場合、その認証方法は、候補になりません。
.sp
この指定は、サーバー側とクライアント側の両方で解釈され、 双方ともで有効になっている認証方法のみが用いられます。
.sp
認証方法が異なるものに関しては、指定の順序は意味がありません。 複数の認証方法が候補となった場合、sharedsecret、
gsi_auth、gsi認証の順序で試みます。
.sp
Gfarmのコンパイル時にglobusとのリンクを指定しなかった場合、 GSIは利用できません。この場合、gsiおよび
gsi_auth認証の指定は単に無視されます。
.sp
この設定は必須です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	auth disable sharedsecret 192\&.168\&.0\&.100
	auth disable sharedsecret 192\&.168\&.0\&.101
	auth enable sharedsecret 192\&.168\&.0\&.0/24
	auth enable gsi_auth 10\&.0\&.0\&.0/8
	auth enable gsi *
.fi
.if n \{\
.RE
.\}
.sp
この例では、ホスト192\&.168\&.0\&.100と192\&.168\&.0\&.101の2つのホストを 除いた192\&.168\&.0\&.0/24ネットワークに属すホストには
sharedsecretとgsiの両方を、 10\&.0\&.0\&.0/8ネットワークに属すホストにはgsi_authおよび
gsiの両方を、 それ以外の全てのホストにはgsi認証のみを試みます。 すなわち、ホスト192\&.168\&.0\&.100と192\&.168\&.0\&.101の2つのホストは、
gsi認証のみを試みることになります。
.RE
.PP
sockopt \fIオプション\fR\fI[=\fR\fI値\fR\fI] [\fR\fILISTENER\fR\fI | \fR\fI\fIホスト指定\fR\fR\fI]\fR
.RS 4
通信socket(2)に対して、setsockopt(2)システムコールを使って ソケット・オプションを指定します。
.sp
第2引数に全て大文字でLISTENERを指定した場合、 サーバー側(着呼側)のソケットに指定するオプションになります。 この場合、通信する相手に関係なく、 一律にソケット・オプションが設定されます。
.sp
第2引数にホスト指定を記述した場合、クライアント側(発呼側)の ソケットに指定するオプションになります。この場合、通信する相手毎に ソケット・オプションを変えることができます。 なお、第2引数に"*"と記述すると、クライアント側(発呼側)の全ての ホストを意味することになり、サーバー側(着呼側)には適用されません。
.sp
第2引数を省略した場合、サーバー側とクライアント側の両方で、 全ての通信相手に対して同じソケット・オプションを設定します。
.sp
指定可能なソケット・オプションには次のものがあります。
.sp
debug。setsockopt(2)システムコールで、\fBSO_DEBUG\fRソケット・オプションを指定します。値を記述する必要はありません。
.sp
keepalive。setsockopt(2)システムコールで、\fBSO_KEEPALIVE\fR
ソケット・オプションを指定します。値を記述する必要はありません。
.sp
sndbuf。setsockopt(2)システムコールで、\fBSO_SNDBUF\fR
ソケット・オプションを指定します。値の指定が必要です。
.sp
rcvbuf。setsockopt(2)システムコールで、\fBSO_RCVBUF\fR
ソケット・オプションを指定します。値の指定が必要です。
.sp
tcp_nodelay。setsockopt(2)システムコールで、\fBTCP_NODELAY\fR
ソケット・オプションを指定します。値を記述する必要はありません。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	sockopt tcp_nodelay 192\&.168\&.0\&.0/24
	sockopt sndbuf=1048576 10\&.0\&.0\&.0/8
	sockopt sndbuf=1048576 LISTENER
	sockopt rcvbuf=1048576 10\&.0\&.0\&.0/8
	sockopt rcvbuf=1048576 LISTENER
.fi
.if n \{\
.RE
.\}
.RE
.PP
known_network \fIホスト指定\fR
.RS 4
ファイルシステムノードのネットワークを指定します。 本ネットワークは、 ファイルシステムノード選択時のグルーピングに利用されます。 この文で指定したアドレスに適合しないIPアドレスの場合、 IPv4のクラスCネットワークが仮定されます。
.sp
複数のネットワークを指定する場合は、以下のように複数回指定します。
.sp
.if n \{\
.RS 4
.\}
.nf
	known_network 192\&.168\&.0\&.0/25
	known_network 192\&.168\&.0\&.128/25
.fi
.if n \{\
.RE
.\}
.RE
.PP
network_receive_timeout \fI秒数\fR
.RS 4
ネットワークを介したデータ受信のタイムアウト時間を秒単位で指定 します。 デフォルト値は60秒です。 この文は gfarm2\&.conf および gfmd\&.conf のいずれにおいても有効です。
.sp
Gfarmクライアントプログラムが指定した時間待ったもの、gfsd から のデータがまったく届かなかった場合は、その gfsd との通信を中止し、処理 を継続させるべく他の gfsd サーバとの通信を試みます。
.sp
gfmd が指定した時間待ったもの、gfsd からデータがまったく 届かなかった場合、その gfsd との通信を中止して、その gfsd はダウンした ものとみなします。
.RE
.PP
admin_user \fIユーザ名\fR
.RS 4
gfmd\&.conf内のこの文で指定されたユーザが、 デフォルトの特権ユーザとなります。
.RE
.PP
admin_user_gsi_dn \fIDN\fR
.RS 4
gfmd\&.conf内のadmin_user文で指定された特権ユーザのSubject DNを指定します。
.RE
.PP
local_user_map \fIユーザマップファイルパス名\fR [\fIホスト名\fR:[\fIポート番号\fR]]
.RS 4
sharedsecret認証において、 グローバルユーザ名とローカルユーザ名の対応関係を記述した ユーザマップファイルパス名を指定します。 この設定は必須ではありませんが、 その場合ローカルユーザ名がグローバルユーザ名に変換されます。
.sp
同一ユーザに対して、 異なるローカルアカウント名を与えているファイルシステムノードがある場合や、 ローカルユーザ名とは異なるグローバルユーザ名を利用したい場合、 このファイルで、各ノードのローカルなユーザ名に対して、単一の グローバルユーザ名を定義します。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	local_user_map /etc/gfarm/gfarm\-usermap
.fi
.if n \{\
.RE
.\}
.sp
ユーザマップファイルは、グローバルユーザ名と ローカルユーザ名を、空白で区切って各行に記述します。
.sp
ユーザマップファイルの内容例:
.sp
.if n \{\
.RS 4
.\}
.nf
	foobar foo
	quux baz
.fi
.if n \{\
.RE
.\}
.sp
この例の1行目の指定では、このノードのローカルユーザ名fooに 対してグローバルユーザ名foobarが定義されています。
.sp
メタデータサーバのホスト名/ポート番号を指定すると、 接続先のサーバごとに異なるユーザマップファイルを適用します。 ポート番号を省略した場合は、デフォルトのポート番号(601)を使用します。 local_user_map は複数回指定可能です。 ローカルユーザ名が同一の定義が複数のファイルに存在する場合、最初の定義が選択されます。
.sp
複数のユーザマップファイルの例:
.sp
.if n \{\
.RS 4
.\}
.nf
	local_user_map /etc/gfarm/gfarm\-usermap1\-1
	local_user_map /etc/gfarm/gfarm\-usermap1\-2
	local_user_map /etc/gfarm/gfarm\-usermap2\-1 server2
	local_user_map /etc/gfarm/gfarm\-usermap2\-2 server2
.fi
.if n \{\
.RE
.\}
.sp
この例では server2 に接続するときは gfarm\-usermap2\-1、gfarm\-usermap2\-2 の順番に適用します。 server2 以外に接続するときは gfarm\-usermap1\-1、gfarm\-usermap1\-2 の順番に適用します。
.RE
.PP
local_group_map \fIグループマップファイルパス名\fR [\fIホスト名\fR:[\fIポート番号\fR]]
.RS 4
グローバルグループ名とローカルグループ名の対応関係を記述した グループマップファイルパス名を指定します。 このマップファイルは，ローカルシステムのグループIDを利用するgfarm2fsや Globus GridFTPのGfarm DSIなどで利用されます。 この設定は必須ではありませんが、 その場合ローカルグループ名はグローバルグループ名と等しいと仮定されます。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	local_group_map /etc/gfarm/gfarm\-groupmap
.fi
.if n \{\
.RE
.\}
.sp
グループマップファイルは、グローバルグループ名と ローカルグループ名を、空白で区切って各行に記述します。
.sp
メタデータサーバのホスト名/ポート番号を指定すると、 接続先のサーバごとに異なるグループマップファイルを適用します。 指定方法は local_user_map と同様です。
.RE
.PP
schedule_cache_timeout \fI秒数\fR
.RS 4
gfarmライブラリが内部的に保持している、ファイルシステムノード のスケジューリング処理に関わる情報、すなわちロードアベレージ、 ディスク空き容量、認証が通るか否か等のキャッシュの有効期限を秒数で指定します。 停止していたファイルシステムノードが復活したような場合、この期限が 切れるまでは、そのノードがスケジューリングされないことがあります。 デフォルトは600秒すなわち10分です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	schedule_cache_timeout 60
.fi
.if n \{\
.RE
.\}
.RE
.PP
schedule_concurrency \fI並列度\fR
.RS 4
ファイルシステムノードを、スケジューリングのために並列検索する際の 並列度を指定します。 この数を増やすと並列度が高まり、スケジューリングが早く終りますが、 ファイルシステムノードの負荷は高くなります。 デフォルトは10です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	schedule_concurrency 10
.fi
.if n \{\
.RE
.\}
.RE
.PP
schedule_concurrency_per_net \fI並列度\fR
.RS 4
ファイルシステムノードのスケジューリング時に、 ファイルシステムノードが属する各ネットワークと、クライアントとの間の ネットワーク遅延を計測します。このパラメータは、各ネットワーク毎に 幾つのファイルシステムノードを対象に計測するかを指定します。 停止しているファイルシステムノードが多い場合や、 負荷の高いファイルシステムノードが多く計測誤差が大きい場合には、 このパラメータを増やした方が良いかもしれません。 このパラメータを増やした場合には、 それに応じて schedule_concurrency パラメータについても増やすことを推奨します。 デフォルトは3です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	schedule_concurrency_per_net 3
.fi
.if n \{\
.RE
.\}
.RE
.PP
schedule_idle_load_thresh \fICPU負荷\fR
.RS 4
ファイルシステムノードのスケジューリング時に、 CPU負荷が低いとみなされるCPU負荷を指定します。 ここで指定されるCPU負荷より低いCPU負荷のファイルシステムノードが まずはスケジュール対象となります。 デフォルト値は0\&.1です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	schedule_idle_load_thresh 0\&.1
.fi
.if n \{\
.RE
.\}
.RE
.PP
schedule_busy_load_thresh \fICPU負荷\fR
.RS 4
ファイルシステムノードのスケジューリング時に、 CPU負荷が高いとみなされるCPU負荷を指定します。 ここで指定されるCPU負荷より高いCPU負荷のファイルシステムノードは 当初スケジュール対象となりません。 デフォルト値は0\&.5です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	schedule_busy_load_thresh 0\&.5
.fi
.if n \{\
.RE
.\}
.RE
.PP
schedule_virtual_load \fICPU負荷\fR
.RS 4
ファイルシステムノードが選択されたとき、 CPU負荷のクライアントキャッシュにここで指定されるCPU負荷が加えられます。 これにより、 一度スケジュールされたファイルシステムノードが何度もスケジュールされることを防いでいます。 デフォルト値は0\&.3です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	schedule_virtual_load 0\&.3
.fi
.if n \{\
.RE
.\}
.RE
.PP
schedule_candidates_ratio \fI比率\fR
.RS 4
ファイルシステムノードのスケジューリング時に、 ロードアベレージが schedule_busy_load_thresh 以下のノードが、 スケジューリング対象のノード数の何倍見つかったら、 検索を打ち切るかを指定します。 この値を大きくすると、より多くのノードを検索するため、 スケジューリングの精度は上がりますが、処理は遅くなります。 デフォルト値は4\&.0です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	schedule_candidates_ratio 4\&.0
.fi
.if n \{\
.RE
.\}
.RE
.PP
schedule_rtt_thresh_diff \fIマイクロ秒\fR
.RS 4
ファイルシステムノードのスケジューリング時に、 ファイルシステムノードが属する各ネットワークと、クライアントとの間の ネットワーク遅延が、何マイクロ秒増えたら、そのネットワークに対する スケジューリングの優先度を落すかを指定します。 同様なパラメータに schedule_rtt_thresh_ratio があり、 この2つパラメータによる計算のいずれかに当てはまると優先度が落ちます。 デフォルト値は1000マイクロ秒、すなわち 1ミリ秒です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	schedule_rtt_thresh_diff 1000
.fi
.if n \{\
.RE
.\}
.RE
.PP
schedule_rtt_thresh_ratio \fI比率\fR
.RS 4
ファイルシステムノードのスケジューリング時に、 ファイルシステムノードが属する各ネットワークと、クライアントとの間の ネットワーク遅延が、何倍になったら、そのネットワークに対する スケジューリングの優先度を落すかを指定します。 同様なパラメータに schedule_rtt_thresh_diff があり、 この2つパラメータによる計算のいずれかに当てはまると優先度が落ちます。 デフォルト値は4\&.0です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	schedule_rtt_thresh_ratio 4\&.0
.fi
.if n \{\
.RE
.\}
.RE
.PP
schedule_rtt_thresh \fI比率\fR
.RS 4
このパラメータは schedule_rtt_thresh_ratio と同じ意味となりますので、 そちらを利用してください。 このパラメータは以前のバージョンとの互換性のために残されています。 デフォルト値は4\&.0です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	schedule_rtt_thresh 4\&.0
.fi
.if n \{\
.RE
.\}
.RE
.PP
write_local_priority \fI有効性\fR
.RS 4
gfarmは、ファイルを書き込むノードを決める際、できる限りローカル ホストを優先するように動作します。この文でdisableと指定することによって、 ローカルホストを他のホストと同様に扱うように変更することができます。
デフォルトはenableです。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	write_local_priority disable
.fi
.if n \{\
.RE
.\}
.RE
.PP
write_target_domain \fIドメイン名\fR
.RS 4
gfarmがファイルを書き込むノードを決める際、できる限りここで 指定したドメインを優先するように動作します。 ここで指定したドメインにファイル作成可能なホストが存在しない場合や、 特にこの指定を行なわなかった場合には、全ノードが対象となります。
この指定を複数回行なっても、最初の指定のみが利用され、二番目以降は 単に無視されるので注意してください。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	write_target_domain example\&.org
.fi
.if n \{\
.RE
.\}
.RE
.PP
minimum_free_disk_space \fIバイト数\fR
.RS 4
ファイルシステムノードで必要な最小限度のディスク空き容量を指定 します。このサイズ以下の空き容量しかないファイルシステムノードは、 ファイル書き込みを行う可能性のある操作を行う際に、選択されにくくなります。 指定はバイト単位で行いますが、数字の末尾に空白を開けずにk/M/G/Tを指定 することで、それぞれ1kバイト／1Mバイト／1Gバイト／1Tバイトを単位とする ことができます。 デフォルトは128Mバイトです。
.sp
このパラメータは、gfarm2\&.confとgfmd\&.confの両方で指定する必要があります。 有効にするためには gfmd および Gfarmクライアントを再起動する必要があります。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	minimum_free_disk_space 1G
.fi
.if n \{\
.RE
.\}
.RE
.PP
gfs_proto_fhremove_request_window \fI同時処理数\fR
.RS 4
gfmd から gfsd に対する複製ファイル削除を、 同時にいくつまで並行して要求できるかを設定します。 デフォルトは 50 です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	gfs_proto_fhremove_request_window 50
.fi
.if n \{\
.RE
.\}
.RE
.PP
gfs_proto_replication_request_window \fI同時処理数\fR
.RS 4
gfmd 主導の複製処理を、gfmd から複製作成側の gfsd に対して、 同時にいくつまで並行して要求できるかを設定します。 デフォルトは 20 です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	gfs_proto_replication_request_window 20
.fi
.if n \{\
.RE
.\}
.RE
.PP
simultaneous_replication_receivers \fI同時処理数\fR
.RS 4
gfarm\-2\&.6 以降では、 このパラメータは gfs_proto_replication_request_window と同じ意味となりますので、 そちらを利用してください。 このパラメータは以前のバージョンとの互換性のために残されています。 デフォルトは 20です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	simultaneous_replication_receivers 20
.fi
.if n \{\
.RE
.\}
.RE
.PP
outstanding_file_replication_limit \fI同時処理数\fR
.RS 4
gfmd 主導の複製処理要求を、システム全体で、 同時にいくつまで未了のまま保持しておけるかを設定します。 このパラメータは、大量の複製要求によるメモリ不足を防ぐために存在します。 デフォルトは 4194304 であり、これはおよそ 512MB のメモリに対応します。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	outstanding_file_replication_limit 4194304
.fi
.if n \{\
.RE
.\}
.RE
.PP
gfsd_connection_cache \fIコネクション数\fR
.RS 4
gfarmライブラリがgfsdとの通信に用いるコネクションを、いくつ までキャッシュするかを指定します。 デフォルトは16コネクションです。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	gfsd_connection_cache 32
.fi
.if n \{\
.RE
.\}
.RE
.PP
xmlattr_size_limit \fIバイト数\fR
.RS 4
XML拡張属性の値として、何バイトまで設定可能かを指定します。 デフォルトは786432バイトです。 983040バイトよりも大きな値を指定することはできません。
.sp
この文はgfmd\&.confのみで有効であり、gfarm2\&.confでは無視されます。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	xmlattr_size_limit 786432
.fi
.if n \{\
.RE
.\}
.RE
.PP
xattr_size_limit \fIバイト数\fR
.RS 4
拡張属性の値として、何バイトまで設定可能かを指定します。 デフォルトは65536バイトです。 983040バイトよりも大きな値を指定することはできません。
.sp
この文はgfmd\&.confのみで有効であり、gfarm2\&.confでは無視されます。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	xattr_size_limit 65536
.fi
.if n \{\
.RE
.\}
.RE
.PP
attr_cache_limit \fI個数\fR
.RS 4
gfarmライブラリがキャッシュする属性の最大数を指定します。 デフォルトは40000個です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	attr_cache_limit 100000
.fi
.if n \{\
.RE
.\}
.RE
.PP
attr_cache_timeout \fIミリ秒数\fR
.RS 4
gfarmライブラリが属性をキャッシュしている時間を、ミリ秒単位で指定します。 デフォルトは 1000ミリ秒すなわち 1秒です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	attr_cache_timeout 3600000
.fi
.if n \{\
.RE
.\}
.RE
.PP
page_cache_timeout \fIミリ秒数\fR
.RS 4
gfarmカーネルドライバにのみ関連する値で、ファイルデータを キャッシュしている時間を、ミリ秒単位で指定します。 デフォルトは 1000ミリ秒すなわち 1秒です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	page_cache_timeout 3600000
.fi
.if n \{\
.RE
.\}
.RE
.PP
log_level \fI優先度レベル\fR
.RS 4
どの優先度レベル以上のログを出力するかを指定します。 ここで指定したレベル未満の優先度のログは、syslogや標準エラーへ 送られません。 レベルは、優先度の高い順に"emerg", "alert", "crit", "err", "warning", "notice", "info", "debug"です。 デフォルトの出力レベルは"info"です。 "crit"以上の優先度を指定することは、お勧めできません。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	log_level debug
.fi
.if n \{\
.RE
.\}
.RE
.PP
log_message_verbose_level \fIレベル\fR
.RS 4
ログメッセージの冗長度を指定します。 デフォルトは0です。レベル0では、ログIDが出力されます。 レベル1では、レベル0に加えソースコードのファイル名と行番号が出力されます。 レベル2では、レベル1に加え関数名が出力されます。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	log_message_verbose_level 1
.fi
.if n \{\
.RE
.\}
.RE
.PP
log_auth_verbose \fI有効性\fR
.RS 4
enableと指定した場合、認証処理に関する詳細なログを記録します。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	log_auth_verbose enable
.fi
.if n \{\
.RE
.\}
.RE
.PP
file_trace \fI有効性\fR
.RS 4
enableと指定した場合、ファイル作成・変更・削除に関する 監査ログの出力機能を有効にします。
.sp
このパラメータは、gfarm2\&.confとgfmd\&.confの両方で有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	file_trace enable
.fi
.if n \{\
.RE
.\}
.RE
.PP
fatal_action \fI動作名\fR
.RS 4
このパラメータでは、致命的なエラーが発生したときの動作を設定します。 デフォルトは
\fIbacktrace_and_abort\fR
です。
.sp

例:
.sp
.if n \{\
.RS 4
.\}
.nf
	fatal_action backtrace_and_abort
.fi
.if n \{\
.RE
.\}
.sp
指定可能な動作名は以下の通りです:
.PP
backtrace_and_abort
.RS 4
バックトレースを出力した後、
\fBabort\fR(3)
を呼びます。
.RE
.PP
backtrace_and_exit
.RS 4
バックトレースを出力した後、
\fBexit\fR(3)
を呼びます。
.RE
.PP
abort
.RS 4

\fBabort\fR(3)
を呼びます。
.RE
.PP
exit
.RS 4

\fBexit\fR(3)
を呼びます。
.RE
.RE
.PP
debug_command \fIコマンド行\fR
.RS 4
Gfarmのアプリケーションプログラムがクラッシュした際 (SIGSEGV, SIGBUGを 受け取る等した場合)、このパラメータに記したデバッグコマンドが実行されます。 記述例を示します。
.sp
.if n \{\
.RS 4
.\}
.nf
	debug_command env DISPLAY=:0\&.0 xterm \-e gdb %e %p
.fi
.if n \{\
.RE
.\}
.sp
ここで、"%e", "%p" は実際のプログラム名、プロセスIDにそれぞれ展開されます。 "%" 文字自体をコマンドライン中に記述したい場合は、"%%" と書いて下さい。
.sp
このパラメータは、gfarm2\&.confとgfmd\&.confの両方で有効です。 このパラメータを指定しなかった場合、デバッグコマンドは実行されません。
.RE
.PP
no_file_system_node_timeout \fI秒数\fR
.RS 4
利用可能なファイルシステムノードが存在しない場合， Gfarmクライアントライブラリはファイルシステムノードが利用可能になるまで試行を繰り返しますが、 そのタイムアウト時間を秒単位で指定します。 デフォルトは 30秒です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	no_file_system_node_timeout 30
.fi
.if n \{\
.RE
.\}
.RE
.PP
gfmd_reconnection_timeout \fI秒数\fR
.RS 4
メタデータサーバへの接続が切断された場合， メタデータサーバへの再接続を繰り返しますが， そのタイムアウト時間を秒単位で指定します。 デフォルトは 30秒です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	gfmd_reconnection_timeout 30
.fi
.if n \{\
.RE
.\}
.RE
.PP
atime \fIタイプ\fR
.RS 4
このオプションがdisableの場合、atime(ファイルアクセス時刻)は更新されま せん。relativeの場合、mtime(ファイル修正時刻)またはctime(ファイル変更時 刻)よりも、既にセットされているatimeが早い時刻のとき、またはatimeが1日 以上更新されていないときだけ、atimeが更新されます。strictの場合、atime は常に更新されます。標準設定はrelativeです。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	atime disable
.fi
.if n \{\
.RE
.\}
.RE
.PP
client_file_bufsize \fIバイト数\fR
.RS 4
Gfarmクライアントライブラリ（libgfarm）で使われるファイルのバッファ サイズをバイト単位で指定します。デフォルトは1048568バイト（= 1MiB \- 8B）です。Gfarm\-2\&.5\&.0以前では、ファイルのバッファサイズは、遠隔ファイ ルアクセス性能を極端に低下させないためにも、デフォルト値以下である必 要があります。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	client_file_bufsize 65536
.fi
.if n \{\
.RE
.\}
.RE
.PP
client_parallel_copy \fI並列度\fR
.RS 4
\fBgfprep\fRコマンドと\fBgfpcopy\fRコマ ンドが並列で動作する際の並列度を指定します。指定しない場合は 4並列で動作します。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	client_parallel_copy 10
.fi
.if n \{\
.RE
.\}
.RE
.PP
profile \fI有効性\fR
.RS 4
このオプションがenableの場合、プロファイル情報を出力します。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	profile enable
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_server_list \fIgfmdホスト名[:ポート番号]\fR \fI\&.\&.\&.\fR
.RS 4
冗長化メタデータサーバの接続先一覧をスペース区切りで指定します。 ポート番号を省略するとデフォルトの601を指定したことになります。
.sp
この文はgfarm2\&.confのみで有効であり、gfmd\&.confでは無視されます。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_server_list mds1 mds2:701
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_replication \fI有効性\fR
.RS 4
このオプションがenableの場合、メタデータ冗長化機能が有効になります。デフォルトは disable です。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_replication enable
.fi
.if n \{\
.RE
.\}
.RE
.PP
synchronous_replication_timeout \fI秒数\fR
.RS 4
メタデータの同期レプリケーション実行時のタイムアウト時間を秒単位で設定します。 タイムアウト時間を過ぎた場合、同期先のスレーブgfmdとのgfmd channelの接続は切断されます。 接続が切断したスレーブgfmdへのレプリケーションは、スレーブgfmdが再接続してくるまで中断します。 デフォルトは 10 です。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	synchronous_replication_timeout 30
.fi
.if n \{\
.RE
.\}
.RE
.PP
synchronous_journaling \fI有効性\fR
.RS 4
このオプションがenableの場合、ジャーナルファイルへ更新情報を保存した後にfdatasyncを実行します。 実行するタイミングは、1つのトランザクションの開始から終了までのレコードを書き込んだ後です。 デフォルトはenableです。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	synchronous_journaling disable
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_server_force_slave \fI有効性\fR
.RS 4
enable のとき、デフォルトのマスターgfmdとして設定されている場合でも、スレーブgfmdとして起動します。 デフォルトはdisableです。
.sp
注意: この機能の実装は不完全ですので、今のところ、利用しないでください。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_server_force_slave enable
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_server_slave_listen \fI有効性\fR
.RS 4
enable のとき、スレーブgfmdとして設定されている場合でも、クライアントからの要求を受け付けます。 デフォルトはdisableです。
.sp
注意: この機能は開発用に用意されていますので、通常の用途では設定しないでください。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_server_slave_listen enable
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_server_slave_max_size \fIノード数\fR
.RS 4
スレーブgfmdの最大ノード数を指定します。デフォルトは16です。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_server_slave_max_size 40
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_journal_dir \fIジャーナルディレクトリ\fR
.RS 4
ジャーナルファイルの保存ディレクトリを指定します。 このオプションはconfig\-gfarmで指定します。 このオプションが指定されていない場合、gfmdは起動しません。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_journal_dir /var/gfarm\-metadata/journal
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_journal_max_size \fIファイルサイズ\fR
.RS 4
ジャーナルファイルの最大サイズを指定します。 サイズが大きいほど、gfmdが起動完了するまでの時間が長くなることに注意してください。 デフォルトは 33554432 (32 MBytes)です。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_journal_max_size 8388608
.fi
.if n \{\
.RE
.\}
.RE
.PP
metadb_journal_recvq_size \fIキュー長\fR
.RS 4
スレーブgfmdが、マスターgfmdから受け取るジャーナルデータに関して、 メモリ上に保持する最大レコード数を指定します。 このサイズを越えて保持する必要が生じた場合には、バックエンド・データベース への反映に遅延が生じていると見なし、スレーブとしての動作を諦めて終了します。 デフォルトは100000です。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	metadb_journal_recvq_size 100000
.fi
.if n \{\
.RE
.\}
.RE
.PP
replica_check \fI有効性\fR
.RS 4
enableと指定した場合、gfmd内のreplica_check機能が自動的に、 ファイル複製の数と配置をチェックし、修復します。 replica_checkは必要なときにしか動作しません。 デフォルトはenableです。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	replica_check disable
.fi
.if n \{\
.RE
.\}
.RE
.PP
replica_check_host_down_thresh \fI秒数\fR
.RS 4
gfsdが停止した場合、replica_checkは指定した秒数までそのgfsdが停止してい ないとみなします。これはgfsdを保守するために有用です。 デフォルトは10800秒(3時間)です。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	replica_check_host_down_thresh 3600
.fi
.if n \{\
.RE
.\}
.RE
.PP
replica_check_sleep_time \fIナノ秒\fR
.RS 4
この値を増やすと、replica_checkはgfmdが忙しい場合に限り、ゆっくり動作します。 gfmdが忙しくない場合、replica_checkは全力で動作します。 replica_check内でスリープする時間をナノ秒で指定します。 デフォルトは100000ナノ秒(0\&.1ミリ秒)です。 最大値は1000000000ナノ秒(1秒)です。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	replica_check_sleep_time 0
.fi
.if n \{\
.RE
.\}
.RE
.PP
replica_check_minimum_interval \fI秒\fR
.RS 4
replica_checkが動作するための最小間隔(秒)を指定します。 デフォルトは10秒です。 つまり、replica_checkは10秒間に最大1回動作することができます。
.sp
この文はgfmd\&.confのみで有効です。
.sp
例:
.sp
.if n \{\
.RS 4
.\}
.nf
	replica_check_minimum_interval 5
.fi
.if n \{\
.RE
.\}
.RE
.SH "GRAMMAR"
.PP
gfarm2\&.confの文法をBNFで記述すると、下記のようになります。
.PP
<statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<spool_statement> |
	<spool_server_listen_address_statement> |
	<spool_server_listen_backlog_statement> |
	<spool_server_cred_type_statement> |
	<spool_server_cred_service_statement> |
	<spool_server_cred_name_statement> |
	<spool_check_level_statement> |
	<metadb_server_host_statement> |
	<metadb_server_port_statement> |
	<metadb_server_cred_type_statement> |
	<metadb_server_cred_service_statement> |
	<metadb_server_cred_name_statement> |
	<metadb_server_listen_backlog_statement> |
	<metadb_server_max_descriptors_statement> |
	<metadb_server_stack_size_statement> |
	<metadb_server_thread_pool_size_statement> |
	<metadb_server_job_queue_length_statement> |
	<metadb_server_heartbeat_interval_statement> |
	<metadb_server_dbq_size_statement> |
	<ldap_server_host_statement> |
	<ldap_server_port_statement> |
	<ldap_base_dn_statement> |
	<ldap_bind_dn_statement> |
	<ldap_bind_password_statement> |
	<postgresql_server_host_statement> |
	<postgresql_server_port_statement> |
	<postgresql_dbname_statement> |
	<postgresql_user_statement> |
	<postgresql_password_statement> |
	<postgresql_conninfo_statement> |
	<auth_statement> |

	<sockopt_statement> |



	<known_network_statement> |
	<network_receive_timeout_statement> |
	<admin_user_statement> |
	<admin_user_gsi_dn_statement> |
	<local_user_map_statement> |
	<local_group_map_statement> |
	<schedule_cache_timeout_statement> |
	<schedule_concurrency_statement> |
	<schedule_concurrency_per_net_statement> |
	<schedule_idle_load_thresh_statement> |
	<schedule_busy_load_thresh_statement> |
	<schedule_virtual_load_statement> |
	<schedule_candidates_ratio_statement> |
	<schedule_rtt_thresh_diff_statement> |
	<schedule_rtt_thresh_ratio_statement> |
	<schedule_rtt_thresh_statement> |
	<write_local_priority_statement> |
	<write_target_domain_statement> |
	<minimum_free_disk_space_statement> |
	<gfs_proto_fhremove_request_window_statement> |
	<gfs_proto_replication_request_window_statement> |
	<simultaneous_replication_receivers_statement> |
	<outstanding_file_replication_limit_statement> |
	<gfsd_connection_cache_statement> |
	<xmlattr_size_limit_statement> |
	<xattr_size_limit_statement> |
	<attr_cache_limit_statement> |
	<attr_cache_timeout_statement> |
	<page_cache_timeout_statement> |
	<log_level_statement> |
	<log_message_verbose_level_statement> |
	<log_auth_verbose_statement> |
	<file_trace_statement> |
	<fatal_action_statement> |
	<debug_command_statement> |

	<atime_statement> |
	<client_file_bufsize_statement> |
	<client_parallel_copy_statement> |
	<profile_statement> |
	<metadb_server_list_statement> |
	<metadb_replication_statement> |
	<synchronous_replication_timeout_statement> |
	<synchronous_journaling_statement> |
	<metadb_server_force_slave_statement> |
	<metadb_server_slave_listen_statement> |
	<metadb_server_slave_max_size_statement> |
	<metadb_journal_dir_statement> |
	<metadb_journal_max_size_statement> |
	<metadb_journal_recvq_size_statement> |
	<replica_check_statement> |
	<replica_check_host_down_thresh_statement> |
	<replica_check_sleep_time_statement> |
	<replica_check_minimum_interval_statement>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<spool_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"spool" <pathname>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<spool_server_listen_address_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"spool_server_listen_address" <ipv4_address>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<spool_server_listen_backlog_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"spool_server_listen_backlog" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<spool_server_cred_type_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"spool_server_cred_type" <cred_type>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<spool_server_cred_service_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"spool_server_cred_service" <cred_service>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<spool_server_cred_name_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"spool_server_cred_name" <cred_name>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<spool_check_level_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"spool_check_level" <spck_level>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_host_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_host" <hostname>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_port_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_port" <portnumber>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_cred_type_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_cred_type" <cred_type>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_cred_service_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_cred_service" <cred_service>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_cred_name_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_cred_name" <cred_name>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_listen_backlog_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_listen_backlog" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_max_descriptors_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_max_descriptors" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_stack_size_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_stack_size" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_thread_pool_size_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_thread_pool_size" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_job_queue_length_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_job_queue_length" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_heartbeat_interval_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_heartbeat_interval" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_dbq_size_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_dbq_size" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<ldap_server_host_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"ldap_server_host" <hostname>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<ldap_server_port_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"ldap_server_port" <portnumber>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<ldap_base_dn_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"ldap_base_dn" <string>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<ldap_bind_dn_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"ldap_bind_dn" <string>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<ldap_bind_password_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"ldap_bind_password" <string>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<postgresql_server_host_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"postgresql_server_host" <hostname>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<postgresql_server_port_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"postgresql_server_port" <portnumber>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<postgresql_dbname_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"postgresql_dbname" <string>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<postgresql_user_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"postgresql_user" <string>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<postgresql_password_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"postgresql_password" <string>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<postgresql_conninfo_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"postgresql_conninfo" <string>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<auth_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"auth" <validity> <auth_method> <hostspec>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<auth_command> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"enable" | "disable"
.fi
.if n \{\
.RE
.\}
.RE
.PP
<auth_method> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"gsi" | "gsi_auth" | "sharedsecret"
.fi
.if n \{\
.RE
.\}
.RE
.PP
<sockopt_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"sockopt" <socket_option>[=<number>] [""LISTENER" | <hostspec>]
.fi
.if n \{\
.RE
.\}
.RE
.PP
<socket_option> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"debug" | "keepalive" | "sndbuf" | "rcvbuf" |
	"tcp_nodelay"
.fi
.if n \{\
.RE
.\}
.RE
.PP
<known_network_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"known_network" <hostspec>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<network_receive_timeout_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"network_receive_timeout" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<admin_user_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"admin_user" <string>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<admin_user_gsi_dn_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"admin_user_gsi_dn" <string>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<local_user_map_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"local_user_map" <local_user_and_group_map_spec>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<local_group_map_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"local_group_map" <local_user_and_group_map_spec>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<local_user_and_group_map_spec> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<pathname> |
		<pathname> <hostname>|
		<pathname> <hostname> ":" <portnumber>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<schedule_cache_timeout_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"schedule_cache_timeout" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<schedule_concurrency_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"schedule_concurrency" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<schedule_concurrency_per_net_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"schedule_concurrency_per_net" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<schedule_idle_load_thresh_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"schedule_idle_load_thresh" <load>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<schedule_busy_load_thresh_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"schedule_busy_load_thresh" <load>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<schedule_virtual_load_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"schedule_virtual_load" <load>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<schedule_candidates_ratio_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"schedule_candidates_ratio" <floating_point_number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<schedule_rtt_thresh_diff_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"schedule_rtt_thresh_diff" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<schedule_rtt_thresh_ratio_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"schedule_rtt_thresh_ratio" <floating_point_number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<schedule_rtt_thresh_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"schedule_rtt_thresh" <floating_point_number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<write_local_priority_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"write_local_priority" <validity>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<write_target_domain_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"write_target_domain" <string>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<minimum_free_disk_space_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"minimum_free_disk_space" <size>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<gfs_proto_fhremove_request_window_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"gfs_proto_fhremove_request_window" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<gfs_proto_replication_request_window_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"gfs_proto_replication_request_window" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<simultaneous_replication_receivers_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"simultaneous_replication_receivers" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<outstanding_file_replication_limit_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"outstanding_file_replication_limit" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<gfsd_connection_cache_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"gfsd_connection_cache" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<xmlattr_size_limit_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"xmlattr_size_limit" <size>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<xattr_size_limit_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"xattr_size_limit" <size>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<attr_cache_limit_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"attr_cache_limit" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<attr_cache_timeout_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"attr_cache_timeout" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<page_cache_timeout_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"page_cache_timeout" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<log_level_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"log_level" <log_priority>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<log_message_verbose_level_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"log_message_verbose_level" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<log_auth_verbose_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"log_auth_verbose" <validity>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<file_trace_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"file_trace" <validity>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<fatal_action_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"fatal_action" <fatal_action_name>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<debug_command_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"debug_command" <string_list>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<no_file_system_node_timeout_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"no_file_system_node_timeout" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<gfmd_reconnection_timeout_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"gfmd_reconnection_timeout" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<atime_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"atime" <atime_type>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<client_file_bufsize_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"client_file_bufsize" <size>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<client_parallel_copy_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"client_parallel_copy" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<profile_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"profile" <validity>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_list_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_list" <metadb_server_list_spec>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_list_spec> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<hostname_port_spec> |
	<hostname_port_spec> <metadb_server_list_spec>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_replication_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_replication" <validity>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<synchronous_replication_timeout_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"synchronous_replication_timeout" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<synchronous_journaling_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"synchronous_journaling" <validity>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_force_slave_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_force_slave" <validity>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_slave_listen_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_slave_listen" <validity>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_server_slave_max_size_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_server_slave_max_size" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_journal_dir_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_journal_dir" <pathname>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_journal_max_size_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_journal_max_size" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<metadb_journal_recvq_size_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"metadb_journal_recvq_size" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<replica_check_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"replica_check" <validity>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<replica_check_host_down_thresh_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"replica_check_host_down_thresh" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<replica_check_sleep_time_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"replica_check_sleep_time" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<replica_check_minimum_interval_statement> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"replica_check_minimum_interval" <number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<string_list> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<string> |
	<string> <string_list>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<hostspec> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<ipv4_address> | <ipv4_address> "/" <address_mask> |
	<hostname> | "\&." <domain_name> | "*"
.fi
.if n \{\
.RE
.\}
.RE
.PP
<pathname> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<pathname_character> <pathname_character>*
.fi
.if n \{\
.RE
.\}
.RE
.PP
<pathname_character> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<hostname_character> | "," | "/" | "_"
.fi
.if n \{\
.RE
.\}
.RE
.PP
<hostname_port_spec> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<hostname>|
	<hostname> ":" <portnumber>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<hostname> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<hostname_character> <hostname_character>*
.fi
.if n \{\
.RE
.\}
.RE
.PP
<hostname_character> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<alphabet> | <digit> | "\-" | "\&."
.fi
.if n \{\
.RE
.\}
.RE
.PP
<portnumber> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<number>
.fi
.if n \{\
.RE
.\}
.RE
.PP
<size> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<number> [ "k" | "M" | "G" | "T" ]
.fi
.if n \{\
.RE
.\}
.RE
.PP
<number> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<digit> [<digit>*]
.fi
.if n \{\
.RE
.\}
.RE
.PP
<digit> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
.fi
.if n \{\
.RE
.\}
.RE
.PP
<string> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
""" <double_quoted_character>* """
.fi
.if n \{\
.RE
.\}
.RE
.PP
<double_quoted_character> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
<any_character_except_backslash_and_double_quotation> |
	"\e\e" | "\e""
.fi
.if n \{\
.RE
.\}
.RE
.PP
<validity> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"enable" | "disable"
.fi
.if n \{\
.RE
.\}
.RE
.PP
<spck_level> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"disable" | "display" | "delete" | "lost_found"
.fi
.if n \{\
.RE
.\}
.RE
.PP
<atime_type> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"disable" | "relative" | "strict"
.fi
.if n \{\
.RE
.\}
.RE
.PP
<log_priority> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"emerg" | "alert" | "crit" | "err" | "warning" |
	"notice" | "info" | "debug"
.fi
.if n \{\
.RE
.\}
.RE
.PP
<fatal_action_name> ::=
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
"backtrace_and_abort" | "backtrace_and_exit" |
	"abort" | "exit"
.fi
.if n \{\
.RE
.\}
.RE
.SH "EXAMPLES"
.PP
以下は sharedsecret認証を使う gfarm2\&.conf の例です。
.sp
.if n \{\
.RS 4
.\}
.nf
metadb_server_host metadb\&.example\&.org
metadb_server_port 601
auth enable sharedsecret *
sockopt keepalive
.fi
.if n \{\
.RE
.\}
.PP
メタデータの保存にPostgreSQLを使い、IPアドレス192\&.168\&.0\&.0/24の ファイルシステムノードやクライアントに対して、sharedsecret認証を 使う gfmd\&.conf の例です。
.sp
.if n \{\
.RS 4
.\}
.nf
metadb_server_host metadb\&.example\&.org
metadb_server_port 601
postgresql_server_host metadb\&.example\&.org
postgresql_server_port 5432
postgresql_dbname gfarm
postgresql_user gfarm
postgresql_password "secret\-postgresql\-password"
auth enable sharedsecret 192\&.168\&.0\&.0/24
admin_user john
sockopt keepalive
.fi
.if n \{\
.RE
.\}
.PP
メタデータの保存にLDAPを使い、任意のIPアドレスを使う ファイルシステムノードやクライアントに対して、GSI認証を使う gfmd\&.conf の例です。
.sp
.if n \{\
.RS 4
.\}
.nf
metadb_server_host metadb\&.example\&.com
metadb_server_port 601
ldap_server_host metadb\&.example\&.com
ldap_server_port 602
ldap_base_dn "dc=example, dc=com"
ldap_bind_dn "cn=gfarmuser, dc=example, dc=com"
ldap_bind_password "secret\-ldap\-password"
auth enable gsi *
spool_server_cred_type host
spool_server_cred_service gfsd
admin_user john
admin_user_gsi_dn "/C=JP/ST=Tokyo/L=Chuo\-ku/O=Example, Inc\&./OU=Example Division/CN=John Doe"
sockopt keepalive
.fi
.if n \{\
.RE
.\}
.SH "FILES"
.PP
%%SYSCONFDIR%%/gfarm2\&.conf
.RS 4
.RE
.PP
$HOME/\&.gfarm2rc
.RS 4
.RE
.SH "SEE ALSO"
.PP

\fBgfmd\fR(8),
\fBgfsd\fR(8),
\fBsetsockopt\fR(2)
