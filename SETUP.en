		Gfarm Filesystem Setup Manual

Table of contents
=================

* About this document
  - Convention of command execution
* Overview
* Configuration of a Gfarm metadata server (MDS)
  - Firewall configuration
* Configuration of a Gfarm filesystem node
  - Firewall configuration
* Configuration of a Gfarm client node
  - Configuration of a client node
  - Firewall configuration
* Testing of the Gfarm filesystem
  - gfls - Directory listing
  - gfhost - Filesystem node information
  - gfdf - display storage capacity
* User registration
* Registration of Gfarm administrators and root users
* Examples of basic functionality
  - File copy
  - File access
  - mount
* Further examples of advanced functionality
  - File replica creation

About this document
===================

This document describes how to configure the Gfarm filesystem.

For users who would like to configure a Gfarm filesystem by a non
privileged user, refer to SETUP.private.en.

Please install the Gfarm software before using this manual,
By using either INSTALL.en, for installation from the source code,
or INSTALL.RPM.en, for installation from the RPM binary packages.

If problems occur, please refer to the Trouble Shooting section
in Gfarm-FAQ.en.

o Convention of command execution

In this document, command lines with the prompt '#' mean that the root
privilege is required for execution and command lines with the prompt
'$' mean that they should be executed without the root privilege.

	# useradd -c "Gfarm gfsd" -m _gfarmfs	[with the root privilege]
	$ gfkey -f -p 31536000			[without the root privilege]

Overview
========

To introduce the Gfarm filesystem, configure a metadata server, and
filesystem nodes have to be configured, and register users,
administrators and root users.

Configuration of a Gfarm metadata server (MDS)
==============================================

To set up a Gfarm file system, the root privilege is required.

To begin with, the following information is required:

- a global username of an administrator	[-A]
- a subject DN of an administrator	[-D]	(for GSI auth only)

  The global username is a unique user name used in Gfarm file system
  to share files among several administrative domains having different
  account names.

  When you log on as a normal user and change to the root privilege by
  'su', the normal user account name is used as a global username of
  the administrator by default.

  In case of the shared secret authentication, the default mapping
  from a local account to a global username is identical.  A user
  having the same account name as the global username is an
  administrator by default.  This mapping can be managed by a user
  mapfile that is specified by 'local_user_map' directive in
  gfarm2.conf.

  In case of GSI, a user having the specified subject DN is an
  administrator for a Gfarm file system.

Run 'config-gfarm' to configure a Gfarm filesystem.  First, make
sure of the default setting with the -t option.  With the -t option,
nothing is really executed except for the display of the settings for
configuration.

	# config-gfarm -t -A <global_admin_name> -a gsi_auth -D <Subject DN>

The -a and -D options are only required for GSI authentication.  The
-a option specifies the authentication method in Gfarm file system.
The default is shared secret authentication (sharedsecret).  For
details, refer to a manual page of gfarm2.conf(5) and Gfarm-FAQ.en.

Note that the -X option is required to enable XML Path Language
(XPath) support for querying XML extended attributes.  The -r option
is required to enable replicated metadata servers.  For details, see
tutorial of replicated metadata servers.

You can modify any default parameter with the option shown in [ ].
When you have confirmed the parameter, run 'config-gfarm' by the root
user without the -t option.

	# config-gfarm -A <global_admin_name> -a gsi_auth -D <Subject DN>

config-gfarm sets up the backend database, creates a Gfarm configuration
files <sysconfdir>/gfarm2.conf and <sysconfdir>/gfmd.conf, puts startup
scripts 'gfmd' and 'gfarm-pgsql' (or 'gfarm-slapd') onto /etc/init.d (or
/etc/rc.d/init.d, according to operating system), and executes the
Gfarm metadata server gfmd.

  '<sysconfdir>' represents a directory for configuration files,
  specified by --sysconfdir option of 'configure' at the compilation
  of Gfarm (see 'INSTALL.en' for more details).  If you have installed
  Gfarm from the RPM binary packages, <sysconfdir> is '/etc'.

  'prefix' is used to configure several Gfarm filesystems. It
  generates all configuration files under the specified directory.

When you use the shared secret authentication between gfsd and gfmd,
it is necessary to create a '_gfarmfs' user and a shared secret key.

	# useradd -c "Gfarm gfsd" -m _gfarmfs

  We recommend to create a home directory in NFS if available.

Create a shared secret key '~/.gfarm_shared_key' for the _gfarmfs user
in the home directory.

	# su _gfarmfs
	$ gfkey -f -p 31536000

  This example sets up an expiration date of about one year (31536000
  seconds).

You can check whether the metadata server gfmd is running or not by
the following command execution;

	# /etc/init.d/gfmd status

For the automatic startup during the boot process, chkconfig command
is useful in Red Hat Linux.

	# chkconfig --add gfmd
	# chkconfig --add gfarm-pgsql
	(or # chkconfig --add gfarm-slapd)

For debian, use update-rc.d instead of chkconfig.

	# update-rc.d gfmd defaults
	# update-rc.d gfarm-pgsql defaults
	(or # update-rc.d gfarm-slapd defaults)

If you would like to remove all files created by config-gfarm, first
stop gfmd and backend database server;

	# /etc/init.d/gfmd stop
	(or # killall gfmd)
	# /etc/init.d/gfarm-pgsql stop
	(or # /etc/init.d/gfarm-slapd stop)

Then, remove files and directories as follows;

	# rm -f /etc/gfarm2.conf /etc/gfmd.conf
	# rm -f /etc/init.d/gfarm-* /etc/init.d/gfmd
	# rm -rf /var/gfarm-*

o Firewall configuration

The Gfarm metadata server should be able to accept TCP connections at
a port that are specified by the -m option of the config-gfarm
command.

Configuration of a Gfarm filesystem node
========================================

To set up a Gfarm filesystem node, the root privilege is required.

Create a '_gfarmfs' user if not exist.  This user is a system account
for a gfsd I/O daemon.

	# useradd -c "Gfarm gfsd" -m _gfarmfs

In case of the shared secret authentication, copy the shared secret
key .gfarm_shared_key in the _gfarmfs's directory from the metadata
server if the home directory is not shared.

  Note that the permission of .gfarm_shared_key should be '0600'
  and the owner should be '_gfarmfs'.

In case of the GSI authentication, obtain a service certificate for
the gfsd.

  Copy the certificate to /etc/grid-security/gfsd/gfsd{cert,key}.pem
  and change the owner to '_gfarmfs'.  The permission of gfsdkey.pem
  should be 0400.

Copy <sysconfdir>/gfarm2.conf from the metadata server that is created
by 'config-gfarm'.

  '<sysconfdir>' represents a directory for configuration files,
  specified by --sysconfdir option of 'configure' at the compilation
  of Gfarm (see 'INSTALL.en' for more details).  If you have installed
  Gfarm from the RPM binary packages, <sysconfdir> is '/etc'.

Run 'config-gfsd' to set up a spool directory in a local filesystem
on the filesystem node, and register it in the metadata server.
First, make sure of the default setting with the -t option.  With the -t
option, nothing is really executed except for display of the settings for
configuration.

	# config-gfsd -t /var/gfarm

  You can modify any default parameter by using the option shown in [ ].

  The last argument of config-gfsd is a spool directory, which stores
  physical files in Gfarm file system.  Note that the spool directory
  should be a non-shared area among filesystem nodes.

When you have confirmed the parameter, run 'config-gfsd' by the root
user without the -t option.

	# config-gfsd /var/gfarm

'config-gfsd' creates the configuration file <sysconfdir>/gfsd.conf
and puts the startup script /etc/init.d/gfsd (or /etc/rc.d/init.d/gfsd,
according to operating system).

Finally, 'config-gfsd' displays a command line of 'gfhost' that would
be executed by an administrator in Gfarm file system.

Ask the administrator to execute the displayed text.

  The administrator should execute the gfhost command as a global user
  specified by config-gfarm command on the metadata server host.  In
  case of the shared secret authentication, it is a local account of
  the same name or mapped by a user mapfile.  In case of GSI, use a
  user certificate specified by the -D option of config-gfarm.

	$ /usr/bin/gfhost -c -a i386-fedora5-linux -p 600 -n 2 node1.example.org

  In case of GSI, add a service certificate of the gfsd in
  /etc/grid-security/grid-mapfile of a metadata server in the
  following format.  '@host@' is a fixed string.  It cannot be
  changed.
  Please note that the "CN=" part of the distinguished name
  must be "gfsd/<HOSTNAME_OF_THE_FILESYSTEM_NODE>" format.  For example,
  it must be "CN=gfsd/linux-1.example.com" for a filesystem node
  "linux-1.example.com".

	"Subject DN of gfsd server cert" @host@ FQDN

Start gfsd by the root user.

	# /etc/init.d/gfsd start

You can check whether the gfsd is running or not by the following
command execution;

	# /etc/init.d/gfmd status

For the automatic startup during the boot process, chkconfig command
is useful in Red Hat Linux.

	# chkconfig --add gfsd

For debian, use update-rc.d instead of chkconfig.

	# update-rc.d gfsd defaults

If you would like to remove all files created by config-gfsd, first
stop gfsd;

	# /etc/init.d/gfsd stop

Then, remove files and directories as follows;

	# rm -f /etc/gfarm2.conf /etc/init.d/gfsd
	# rm -rf <spool_directory>

o Firewall configuration

Filesystem nodes should be able to accept TCP connections and
UDP packet reception and transmission at the port that is
specified by the -p option of the config-gfsd command.

Also, it requires the same settings as those of the client nodes.

Configuration of a Gfarm client node
====================================

This chapter describes configuration for a client node.

o Configuration of a client node

Copy /etc/gfarm2.conf from the metadata server to the client node.

  This setting can be substituted for copying to ~/.gfarm2rc.

In case of the shared secret authentication, if user's home directory
is shared among metadata server and file system nodes, there is
nothing to do.  If not, .gfarm_shared_key needs to be create and
copied among every nodes.

In case of GSI, obtain the user certificate, and ask to add your entry
into grid-mapfile of every file system node and a metadata server.

o Firewall configuration

Client nodes should be able to initiate TCP connections to the metadata
server, at the port specified by the -m option of the config-gfarm command.
Furthermore, they should be able to initiate TCP connections and
should be able to send/receive UDP packets to filesystem nodes, from the
port specified by the -p option of the config-gfsd command.

Testing of the Gfarm filesystem
===============================

You can check whether the Gfarm filesystem works or not using any client,
since it can be accessed (or shared) by every client node.

o gfls - Directory listing

'gfls' lists the contents of a directory.

	$ gfls -la
	drwxrwxr-x gfarmadm gfarmadm          4 Aug 23 06:33 .
	drwxrwxr-x gfarmadm gfarmadm          4 Aug 23 06:33 ..
	drwxr-xr-x tatebe   gfarmadm          0 Aug 22 16:08 tmp

o gfhost - Filesystem node information

'gfhost -M' displays the information for filesystem nodes registered
with the metadata server.

	$ gfhost -M
	i386-fedora3-linux 2 linux-1.example.com 600 0
	i386-fedora3-linux 2 linux-2.example.com 600 0
	i386-fedora3-linux 2 linux-3.example.com 600 0
	i386-redhat8.0-linux 1 linux-4.example.com 600 0
	sparc-sun-solaris8 1 solaris-1.example.com 600 0
	sparc-sun-solaris8 1 solaris-2.example.com 600 0
	...

'gfhost -l' displays the status of the filesystem nodes.

	$ gfhost -l
	0.01/0.03/0.03 s i386-fedora3-linux 2 linux-1.example.com 600 0(10.0.0.1)
	0.00/0.00/0.00 s i386-fedora3-linux 2 linux-2.example.com 600 0(10.0.0.2)
	-.--/-.--/-.-- - i386-fedora3-linux 2 linux-3.example.com 600 0(10.0.0.3)
	0.00/0.02/0.00 x i386-redhat8.0-linux 1 linux-4.example.com 600 0(10.0.0.4)
	0.10/0.00/0.00 G sparc-sun-solaris8 1 solaris-1.example.com 600 0(10.0.1.1)
	x.xx/x.xx/x.xx - sparc-sun-solaris8 1 solaris-2.example.com 600 0(10.0.1.2)
	...

The second field shows the status of authentication with the filesystem
node.  's', 'g', and 'G' show successful authentication, while 'x'
shows an authentication failure.

'-.--/-.--/-.--' in the first field shows that gfsd has not executed
correctly, and 'x.xx/x.xx/x.xx' shows the filesystem node is probably
down.

o gfdf - display storage capacity

'gfdf' displays capacity of each file system node and the total
capacity.

	$ gfdf
	   1K-blocks        Used       Avail Capacity Host
	  1824815008      213068  1824601940     0%   linux-1.example.com
	  6835798016    71836400  6763961616     1%   linux-2.example.com
	  1669232308    44224088  1625008220     3%   solaris-1.example.com
	---------------------------------------------
	 10329845332   116273556 10213571776     1%

For details of the above Gfarm commands, refer to the respective man page.

User registration
=================

Every user needs to be registered to access Gfarm file system by a
Gfarm administrator.  Besides, a Gfarm root user needs to create his
home directory.

  A Gfarm administrator specified by config-gfarm is automatically
  registered during config-gfarm.

  Gfarm administrators are members of gfarmadm group.

  Gfarm root users are members of gfarmroot group.

For user registration, execute gfuser command;

	$ gfuser -c global_username realname homedir gsi_dn

'global_username' is a global user name in Gfarm file system.
'realname' is a name to identify the user.  'homedir' is a home
directory in Gfarm.  'gsi_dn' is a subject DN of a user certificate
used in GSI authentication.

  'homedir' is not used for now.

When 'realname' includes a space, it is necessary to quote.  The
following example registers a global user 'foo';

	$ gfuser -c foo "foo bar" /home/foo ""

Next, it is necessary to create a home directory for the user.  This
should be done by a Gfarm root user.  In the case of the above
example,

	$ gfmkdir /home
	$ gfmkdir /home/foo
	$ gfchown foo /home/foo

Registration of Gfarm administrators and root users
===================================================

Gfarm administrators manages file system nodes, users, and groups.
Gfarm root users manages access control in Gfarm file system.

Gfarm administrators are members of the gfarmadm group.  The following
command displays the current administrators.

	$ gfgroup -l gfarmadm

To change the members, use 'gfgroup -m' command.

	$ gfgroup -m gfarmadm user1 user2 ...

Note that 'gfgroup -m' replaces members with specified members.  The
old members are overwritten.

Gfarm root users are members of the gfarmroot group.

	$ gfgroup -m gfarmroot user1 user2 ...

Examples of basic functionality
===============================

o File copy

Files can be copied into the Gfarm file system by the 'gfreg' command.

	$ gfreg .gfarmrc foo

This example shows that a local file .gfarmrc is copied to foo, more
exactly /foo, in the Gfarm file system.

o File access

Files in the Gfarm file systemcan be accessed by the 'gfexport'
command.

	$ gfexport foo

This example displays the content of foo in the Gfarm file system to
the standard output.

o mount

When installing the 'gfarm2fs' command, it is possible to mount the
Gfarm file system.

	$ mkdir /tmp/foo
	$ gfarm2fs /tmp/foo

After mounting the Gfarm file system, any file system access can be
available by usual commands.  To unmount it, use the 'fusermount' with
the -u option.

	$ fusermonut -u /tmp/foo

For details, refer to documents in the gfarm2fs package.

Further examples of advanced functionality
==========================================

o File replica creation

Each file in the Gfarm filesystem can have several file copies that
can be stored on two and more filesystem nodes.

Multiple file copies of the same file enables access to the file even
when one of the filesystem nodes is down.  Moreover, it enables
prevention of access performance deterioration by allowing access to
different file copies.

The 'gfwhere' command displays the location of file copies, or a replica
catalog, of the specified files.

	$ gfwhere .bashrc
	linux-1.example.com

The 'gfrep' command creates file copies.

	$ gfrep -N 2 .bashrc
	$ gfwhere .bashrc
	linux-1.example.com linux-2.example.com

In this case, '.bashrc' has two copies; one is stored on
linux-1.example.com and the other is stored on linux-2.example.com.

o Automatic file replica creation

The extended attribute gfarm.ncopy is used to create file replica
automatically.  If you would like to create two file replicas for all
newly created files, specify two by the extended attribute gfarm.ncopy
of / (the root directory) as follows,

	$ echo -n 2 | gfxattr -s / gfarm.ncopy

Note that file replicas are not always created when there are not
enough number of available file system nodes, or when the Gfarm file
system is too busy.  To ensure to create the specified number of file
replicas, use 'gfrep' command also.
